{
  "formatVersion": 3,
  "id": "root",
  "ideas": {
    "1": {
      "title": "PYTHON",
      "id": 1,
      "attr": {
        "position": [
          -31,
          -15,
          1
        ],
        "style": {
          "fontMultiplier": 2
        }
      },
      "ideas": {
        "1": {
          "title": "\n\nАрифметические операции",
          "id": "2.84db.dd14d1808-f026.7ef2f3656",
          "ideas": {
            "1": {
              "title": "• сложение (+)\n• вычитание (-)\n• умножение (*)\n• деление (/)\n• целочисленное деление (//)\n• возведение в степень (**)\n• взятие остатка от деления (%) ",
              "id": "3.84db.dd14d1808-f026.7ef2f3656"
            }
          }
        },
        "2": {
          "title": "Операторы сравнения",
          "id": "5.84db.dd14d1808-f026.7ef2f3656",
          "ideas": {
            "1": {
              "title": "• >\n• <\n• ==\n• >=\n• <=\n• !=",
              "id": "6.84db.dd14d1808-f026.7ef2f3656"
            }
          }
        },
        "3": {
          "title": "Логические операторы",
          "id": "9.84db.dd14d1808-f026.7ef2f3656",
          "ideas": {
            "1": {
              "title": "AND\nOR\nNOT",
              "id": "10.84db.dd14d1808-f026.7ef2f3656"
            }
          }
        },
        "4": {
          "title": "Операторы проверки вхождения",
          "id": "21.84db.dd14d1808-f026.7ef2f3656",
          "ideas": {
            "1": {
              "title": "IN\nNOT IN",
              "id": "22.84db.dd14d1808-f026.7ef2f3656"
            }
          }
        },
        "5": {
          "title": "Индексация и срезы",
          "id": "49.84db.dd14d1808-f026.7ef2f3656",
          "ideas": {
            "1": {
              "title": "Левая граница - включена,\nправая - не включена",
              "id": "50.84db.dd14d1808-f026.7ef2f3656",
              "attr": {
                "style": {
                  "width": 196
                }
              }
            }
          }
        },
        "6": {
          "title": "Синтактический сахар",
          "id": "63.54ae.7b2bad843-239b.54c311ff2",
          "ideas": {
            "1": {
              "title": " List comprehension",
              "id": "64.54ae.7b2bad843-239b.54c311ff2",
              "ideas": {
                "1": {
                  "title": "Создать список, элементами которого являются квадраты целых чисел. Классический способ:\n\nsquares = []\nfor x in range(10):\nsquares.append(x**2)\n",
                  "id": "65.54ae.7b2bad843-239b.54c311ff2",
                  "attr": {
                    "style": {
                      "textAlign": "left"
                    }
                  },
                  "ideas": {
                    "1": {
                      "title": "squares = [x**2 for x in range(10)]",
                      "id": "66.54ae.7b2bad843-239b.54c311ff2",
                      "attr": {
                        "style": {
                          "textAlign": "left",
                          "width": 299
                        }
                      }
                    }
                  }
                },
                "2": {
                  "title": "для циклов:\n\nfor i in range(x+1):\n_for j in range(y+1):\n__for k in range(z+1):\n___ lst.append([i,j,k])",
                  "id": "67.54ae.7b2bad843-239b.54c311ff2",
                  "attr": {
                    "style": {
                      "textAlign": "left",
                      "width": 136
                    }
                  },
                  "ideas": {
                    "1": {
                      "title": "lst = [[i,j,k] for i in range(x+1) for j in range(y+1) for k in range(z+1)]",
                      "id": "68.54ae.7b2bad843-239b.54c311ff2",
                      "attr": {
                        "style": {
                          "width": 420,
                          "textAlign": "left"
                        }
                      }
                    }
                  }
                },
                "3": {
                  "title": " Распаковываем элементы из списка\n\nЕсли вам нужно вытащить из последовательности определенные значения, можно присвоить переменную каждому элементу в этой последовательности:\n\nx, y = (15, 5)",
                  "id": "70.54ae.7b2bad843-239b.54c311ff2",
                  "attr": {
                    "style": {
                      "textAlign": "left"
                    }
                  }
                },
                "4": {
                  "title": "с условием if:\n\nfor i in lst:\n_if sum(i) !=3:\n__answer.append(i)",
                  "id": "71.54ae.7b2bad843-239b.54c311ff2",
                  "attr": {
                    "style": {
                      "textAlign": "left"
                    }
                  },
                  "ideas": {
                    "1": {
                      "title": "answer = [i for i in lst if sum(i) !=3]",
                      "id": "72.54ae.7b2bad843-239b.54c311ff2",
                      "attr": {
                        "style": {
                          "width": 253
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "16": {
          "title": "Библиотеки для DS",
          "id": "73.6729.3e5fd1f49-bb0a.8855d0ed3",
          "ideas": {
            "1": {
              "title": "pandas",
              "id": "74.6729.3e5fd1f49-bb0a.8855d0ed3",
              "ideas": {
                "1": {
                  "title": "https://drive.google.com/file/d/1smFepT748IxG-dK2BfS-oue3wOkIWwyq/view?usp=sharing ссылка",
                  "id": "75.6729.3e5fd1f49-bb0a.8855d0ed3"
                }
              }
            },
            "2": {
              "title": "numpy\n",
              "id": "76.fa8e.6380235a7-ffa6.e5d4d34b8",
              "ideas": {
                "1": {
                  "title": "ссылка https://drive.google.com/file/d/13DobNcfa6uXWG6KiN52adYdlStgyzelU/view?usp=sharing",
                  "id": "82.7481.1f910ad1e-e957.0e01c2eba"
                }
              }
            },
            "3": {
              "title": "sklearn",
              "id": "77.fa8e.6380235a7-ffa6.e5d4d34b8"
            },
            "4": {
              "title": "matplotlib",
              "id": "78.fa8e.6380235a7-ffa6.e5d4d34b8",
              "attr": {}
            },
            "5": {
              "title": "seaborn",
              "id": "79.fa8e.6380235a7-ffa6.e5d4d34b8",
              "attr": {}
            },
            "6": {
              "title": "statsmodels",
              "id": "80.fa8e.6380235a7-ffa6.e5d4d34b8"
            }
          },
          "attr": {
            "position": [
              452,
              1714.000015258789,
              1
            ]
          }
        },
        "-1": {
          "title": "Переменная – это объект, которому дано имя.",
          "id": "4.84db.dd14d1808-f026.7ef2f3656",
          "ideas": {
            "1": {
              "title": "Области видимости",
              "id": "56.54ae.7b2bad843-239b.54c311ff2",
              "ideas": {
                "1": {
                  "title": "Глобальная область видимости\nГлобальный контекстподразумевает, что переменная является глобальной, она определена вне любой из функций и доступна любой функци",
                  "id": "57.54ae.7b2bad843-239b.54c311ff2"
                },
                "2": {
                  "title": "Локальная область видимости\nВ отличие от глобальных переменных локальная переменнаяопределяется внутри функции и доступна только из этой функции, то есть им",
                  "id": "59.54ae.7b2bad843-239b.54c311ff2"
                }
              }
            }
          }
        },
        "-2": {
          "title": "Условные конструкции",
          "id": "7.84db.dd14d1808-f026.7ef2f3656",
          "ideas": {
            "1": {
              "title": " if\nelif\nelse",
              "id": "8.84db.dd14d1808-f026.7ef2f3656"
            }
          }
        },
        "-3": {
          "title": "Типы данных",
          "id": "11.84db.dd14d1808-f026.7ef2f3656",
          "ideas": {
            "1": {
              "title": "Простые",
              "id": "12.84db.dd14d1808-f026.7ef2f3656",
              "ideas": {
                "1": {
                  "title": "integer\nцелые числа",
                  "id": "13.84db.dd14d1808-f026.7ef2f3656"
                },
                "2": {
                  "title": "float\nчисла с плавающей точкой",
                  "id": "14.84db.dd14d1808-f026.7ef2f3656"
                },
                "3": {
                  "title": "string\nстрока/текст",
                  "id": "15.84db.dd14d1808-f026.7ef2f3656",
                  "ideas": {
                    "1": {
                      "title": "Операции со строками",
                      "id": "19.84db.dd14d1808-f026.7ef2f3656",
                      "ideas": {
                        "1": {
                          "title": "1.конкатенация (объединение) строк возможна при помощи + ;\n2.умножение строки на число позволит повторить ее нужное количество раз;\n3. .upper() приводит строку к верхнему регистру;\n4. .lower() приводит строку к нижнему регистру;\n5. .capitalize() приводит первую букву к верхнему регистру;\n6. .replace('что заменить', 'на что заменить') заменяет элемент в строке на указанный;\n7. len(my_string) позволяет определить длину строки (количество символов в ней);",
                          "id": "20.84db.dd14d1808-f026.7ef2f3656",
                          "attr": {
                            "style": {
                              "width": 509,
                              "textAlign": "left"
                            }
                          }
                        },
                        "2": {
                          "title": "# преобразование строки в список (например, из CSV-файла)\nqueries_list = queries_string.split(',')",
                          "id": "51.84db.dd14d1808-f026.7ef2f3656",
                          "attr": {
                            "style": {
                              "width": 322,
                              "textAlign": "left"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "4": {
                  "title": "boolean\nбулевый/логический тип",
                  "id": "16.84db.dd14d1808-f026.7ef2f3656"
                }
              }
            },
            "2": {
              "title": "Тип объекта можно узнать при помощи функции type().\n\n",
              "id": "17.84db.dd14d1808-f026.7ef2f3656"
            },
            "3": {
              "title": "Тип данных можно принудительно изменить функциями int(), float(),\nbool(), str()",
              "id": "18.84db.dd14d1808-f026.7ef2f3656"
            },
            "4": {
              "title": "Сложные",
              "id": "23.84db.dd14d1808-f026.7ef2f3656",
              "ideas": {
                "1": {
                  "title": "Списки (list)\n[...]",
                  "id": "24.84db.dd14d1808-f026.7ef2f3656",
                  "ideas": {
                    "1": {
                      "title": "это структура данных для упорядоченного хранения\nобъектов различных типов. Является изменяемым\nтипом данных.",
                      "id": "25.84db.dd14d1808-f026.7ef2f3656"
                    },
                    "2": {
                      "title": "Операции со списками",
                      "id": "26.84db.dd14d1808-f026.7ef2f3656",
                      "ideas": {
                        "1": {
                          "title": "● списки можно складывать;\n● del(list[index]) удаляет элемент из списка по индексу;\n● .remove(el) удаляет указанный элемент из списка;\n● .append(el) позволяет добавить элемент в список;\n● .count(el) считает количество вхождений элемента в список;\n● .index(el) позволяет узнать индекс элемента в списке;\n● .reverse() разворачивает список;\n● sorted(list) сортирует список;",
                          "id": "27.84db.dd14d1808-f026.7ef2f3656",
                          "attr": {
                            "style": {
                              "width": 361,
                              "textAlign": "left"
                            }
                          }
                        },
                        "2": {
                          "title": "# Преобразование списка в строку\nprint(','.join(['Столбец 1', 'Столбец 2', 'Столбец 3']))",
                          "id": "52.84db.dd14d1808-f026.7ef2f3656",
                          "attr": {
                            "style": {
                              "width": 311,
                              "textAlign": "left"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "2": {
                  "title": "Кортежи (tuples)\n(...)",
                  "id": "28.84db.dd14d1808-f026.7ef2f3656",
                  "ideas": {
                    "1": {
                      "title": "неизменяемые списки (нельзя добавлять или\nудалять элементы из уже созданного кортежа).",
                      "id": "29.84db.dd14d1808-f026.7ef2f3656"
                    },
                    "2": {
                      "title": "Занимает меньше памяти при работе с ними по сравнению со\nсписками",
                      "id": "30.84db.dd14d1808-f026.7ef2f3656"
                    },
                    "3": {
                      "title": "# кортеж из одного элемента задается так:\nt = ('one', )",
                      "id": "53.84db.dd14d1808-f026.7ef2f3656",
                      "attr": {
                        "style": {
                          "width": 220
                        }
                      }
                    }
                  }
                },
                "3": {
                  "title": "Множества (sets)",
                  "id": "40.84db.dd14d1808-f026.7ef2f3656",
                  "ideas": {
                    "1": {
                      "title": "“контейнер\", содержащий не повторяющиеся\nэлементы в случайном порядке",
                      "id": "41.84db.dd14d1808-f026.7ef2f3656"
                    },
                    "2": {
                      "title": "Операции над множествами",
                      "id": "42.84db.dd14d1808-f026.7ef2f3656",
                      "ideas": {
                        "1": {
                          "title": "● .add(el) добавляет элемент в множество;\n● .update(set) соединяет множество с другим множеством/списком;\n● .discard(el) удаляет элемент из множества по его значению;\n● .union(set) объединяет множества (логическое “ИЛИ”);\n● .intersection(set) – пересечение множеств\n(логическое “И”);\n● .difference(set) – возвращает элементы одного множества,\nкоторые не принадлежат другому множеству (разность\nмножеств);\n● .symmetric_difference(set) – возвращает элементы, которые встречаются в одном множестве, но не встречаются\nв обоих",
                          "id": "43.84db.dd14d1808-f026.7ef2f3656",
                          "attr": {
                            "style": {
                              "width": 419,
                              "textAlign": "left"
                            },
                            "position": [
                              165.98045349121094,
                              -191.00778198242188,
                              1
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "4": {
                  "title": "Словари (dictionaries)",
                  "id": "44.84db.dd14d1808-f026.7ef2f3656",
                  "ideas": {
                    "1": {
                      "title": "неупорядоченные коллекции произвольных\nобъектов с доступом по ключу",
                      "id": "45.84db.dd14d1808-f026.7ef2f3656"
                    },
                    "2": {
                      "title": "Словарь инициализируется при помощи { }, элементы них\nхранятся в формате key:value.\nКлючами могут быть strings, booleans, integers и floats.\nЛюбое значение из словаря можно получить следующим\nобразом: my_dict[key].\nВсе ключи в словаре должны быть уникальными.",
                      "id": "46.84db.dd14d1808-f026.7ef2f3656"
                    },
                    "3": {
                      "title": "Операции со словарями",
                      "id": "47.84db.dd14d1808-f026.7ef2f3656",
                      "ideas": {
                        "1": {
                          "title": "● del(dict[key]) удаляет элемент из списка по ключу;\n● .keys() позволяет получить все ключи словаря;\n● .values() позволяет получить все значения словаря;\n● .items() позволяет получить ключи и значения\nсловаря;\n● .get(key) “безопасно” возвращает значение по\nключу (при отсутствии ключа ошибка не возникает)",
                          "id": "48.84db.dd14d1808-f026.7ef2f3656",
                          "attr": {
                            "style": {
                              "width": 400
                            },
                            "position": [
                              171.98265838623047,
                              -46.993072509765625,
                              1
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "5": {
              "title": "None",
              "id": "54.54ae.7b2bad843-239b.54c311ff2",
              "ideas": {
                "1": {
                  "title": "специальный тип данных, который означает отсутствие значения.",
                  "id": "55.54ae.7b2bad843-239b.54c311ff2"
                }
              }
            }
          }
        },
        "-4": {
          "title": "Циклы",
          "id": "31.84db.dd14d1808-f026.7ef2f3656",
          "ideas": {
            "1": {
              "title": "while",
              "id": "32.84db.dd14d1808-f026.7ef2f3656",
              "ideas": {
                "1": {
                  "title": "Позволяет выполнить одну и ту же последовательность\nдействий, пока проверяемое условие истинно. Как правило,\nцикл while используется, когда невозможно заранее\nопределить точное значение количества проходов исполнения\nцикла",
                  "id": "34.84db.dd14d1808-f026.7ef2f3656"
                }
              }
            },
            "2": {
              "title": "for",
              "id": "33.84db.dd14d1808-f026.7ef2f3656",
              "ideas": {
                "1": {
                  "title": "Цикл for проходится по элементам любого итерируемого\nобъекта (строки, списка и т.д.) и во время каждого прохода\nвыполняет заданную последовательность действий.",
                  "id": "35.84db.dd14d1808-f026.7ef2f3656"
                }
              }
            },
            "3": {
              "title": "break, continue и pass",
              "id": "36.84db.dd14d1808-f026.7ef2f3656",
              "ideas": {
                "1": {
                  "title": "break\nпрерывает исполнение цикла\n",
                  "id": "37.84db.dd14d1808-f026.7ef2f3656"
                },
                "2": {
                  "title": "continue\nзавершает исполнение текущей итерации цикла и переходит к следующей итерации \n",
                  "id": "38.84db.dd14d1808-f026.7ef2f3656"
                },
                "3": {
                  "title": "pass\nигнорирует условие и продолжает исполнение цикла\n",
                  "id": "39.84db.dd14d1808-f026.7ef2f3656"
                }
              }
            }
          }
        },
        "-5": {
          "title": "Функции",
          "id": "60.54ae.7b2bad843-239b.54c311ff2",
          "ideas": {
            "1": {
              "title": "Анонимные функции.\n\nАнонимные функции создаются при помощи инструкции lambda и используются для более краткой записи функций с одним выражением. Выполняются быстрее обычных и не требуют инструкции return:lambda x, pow: x**pow",
              "id": "61.54ae.7b2bad843-239b.54c311ff2"
            },
            "2": {
              "title": "Методы.\n\nЭто функции, которые “принадлежат” к\nопределенному объекту.",
              "id": "62.54ae.7b2bad843-239b.54c311ff2"
            }
          }
        }
      }
    }
  },
  "title": "PYTHON"
}